"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[331],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=u(n),d=a,h=c["".concat(s,".").concat(d)]||c[d]||m[d]||i;return n?r.createElement(h,l(l({ref:t},p),{},{components:n})):r.createElement(h,l({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:a,l[1]=o;for(var u=2;u<i;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6647:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const i={},l=void 0,o={type:"mdx",permalink:"/Multilib-Rewrite/",source:"@site/pages/index.md",description:"Multilib Rewrite",frontMatter:{}},s=[{value:"Why Multilib exists?",id:"why-multilib-exists",level:2},{value:"Installation",id:"installation",level:2},{value:"Lets make it clear, its meant to be used with rojo!",id:"lets-make-it-clear-its-meant-to-be-used-with-rojo",level:3},{value:"How do i use it?",id:"how-do-i-use-it",level:2},{value:"Can i fork it?",id:"can-i-fork-it",level:2},{value:"Last note",id:"last-note",level:2}],u={toc:s},p="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("div",{align:"center"},(0,a.kt)("h1",null,"Multilib Rewrite")),(0,a.kt)("p",null,"A Roblox library that allows you to perform ",(0,a.kt)("em",{parentName:"p"},"simple")," task even ",(0,a.kt)("em",{parentName:"p"},"simplier"),". See ->\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/opkvysxct/Multilib-Rewrite/wiki/Multilib-Wiki"},(0,a.kt)("strong",{parentName:"a"},"Docs"))," for installation and usage help!"),(0,a.kt)("h2",{id:"why-multilib-exists"},"Why Multilib exists?"),(0,a.kt)("p",null,"I just found out that I use the same elements repeatedly across all my projects, and it became quite messy. So, I decided to develop a library that can manage these elements for me. The initial version was quite basic, to be honest, too basic. As a result, I made the decision to rewrite the entire library to include support for multiple modules and classes, among other things. This is why Multilib came into existence."),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("h3",{id:"lets-make-it-clear-its-meant-to-be-used-with-rojo"},"Lets make it clear, its meant to be used with ",(0,a.kt)("a",{parentName:"h3",href:"https://rojo.space/"},"rojo"),"!"),(0,a.kt)("p",null,"First step :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm init\n")),(0,a.kt)("p",null,"Second step :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @vysx/multilib\n")),(0,a.kt)("p",null,"Third step :\nadd a path to your default.project.json in rojo"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'"ReplicatedStorage": {\n    "Multilib" : {\n        "$path": "node_modules/@vysx/multilib"\n    },\n}\n')),(0,a.kt)("h2",{id:"how-do-i-use-it"},"How do i use it?"),(0,a.kt)("p",null,"You can find everything in the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/opkvysxct/Multilib-Rewrite/wiki/Multilib-Wiki"},"wiki"),".\nBut if You want just the loading schemat, then here you go!\nServer"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'_G.MLoader = require(game:GetService("ReplicatedStorage").Multilib)\n_G.MLoader:InitServer(true/false) -- Logs\n')),(0,a.kt)("p",null,"Client"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'_G.MLoader = require(game:GetService("ReplicatedStorage").Multilib)\n_G.MLoader:InitClient(true/false) -- Logs\n')),(0,a.kt)("h2",{id:"can-i-fork-it"},"Can i fork it?"),(0,a.kt)("p",null,"You're welcome!"),(0,a.kt)("h2",{id:"last-note"},"Last note"),(0,a.kt)("p",null,"Special thanks to ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/NiceAssasin123"},"Fengee")," & ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/AlwaysSunnySani"},"Sani")," for help."))}c.isMDXComponent=!0}}]);