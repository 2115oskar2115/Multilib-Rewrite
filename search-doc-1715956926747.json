[{"title":"RadioGroup","type":0,"sectionRef":"#","url":"/Multilib-Rewrite/api/RadioGroup","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RadioGroup","url":"/Multilib-Rewrite/api/RadioGroup#functions","content":" "},{"title":"new​","type":1,"pageTitle":"RadioGroup","url":"/Multilib-Rewrite/api/RadioGroup#new","content":"&lt;/&gt; RadioGroup.new(idName: string) → &lt;table&gt;-- [RadioGroup Object] Constructor for RadioGroup object.  "},{"title":"Init​","type":1,"pageTitle":"RadioGroup","url":"/Multilib-Rewrite/api/RadioGroup#Init","content":"&lt;/&gt; RadioGroup:Init() → () should be called only via Form:InitAll().  "},{"title":"ReturnValues​","type":1,"pageTitle":"RadioGroup","url":"/Multilib-Rewrite/api/RadioGroup#ReturnValues","content":"&lt;/&gt; RadioGroup:ReturnValues() → &lt;string,string&gt;-- [idName of selected and idName of the object] Returns idName of selected and idName of the object.  "},{"title":"InsertElement​","type":1,"pageTitle":"RadioGroup","url":"/Multilib-Rewrite/api/RadioGroup#InsertElement","content":"&lt;/&gt; RadioGroup:InsertElement(element: table) → () Inserts element into the RadioGroup.RadioButtons table.  "},{"title":"InsertElements​","type":1,"pageTitle":"RadioGroup","url":"/Multilib-Rewrite/api/RadioGroup#InsertElements","content":"&lt;/&gt; RadioGroup:InsertElements(elements: table) → () Inserts multiple elements into the RadioGroup.RadioButtons table.  "},{"title":"ClearElement​","type":1,"pageTitle":"RadioGroup","url":"/Multilib-Rewrite/api/RadioGroup#ClearElement","content":"&lt;/&gt; RadioGroup:ClearElement(ElementName: string) → () Removes element from the RadioGroup.RadioButtons table.  "},{"title":"ClearAllElements​","type":1,"pageTitle":"RadioGroup","url":"/Multilib-Rewrite/api/RadioGroup#ClearAllElements","content":"&lt;/&gt; RadioGroup:ClearAllElements() → () Clears the RadioGroup.RadioButtons table.  "},{"title":"Append​","type":1,"pageTitle":"RadioGroup","url":"/Multilib-Rewrite/api/RadioGroup#Append","content":"&lt;/&gt; RadioGroup:Append(where: any) → () Sets the Parent of every radioButton.  "},{"title":"AddAction​","type":1,"pageTitle":"RadioGroup","url":"/Multilib-Rewrite/api/RadioGroup#AddAction","content":"&lt;/&gt; RadioGroup:AddAction( actionName: string, action: any ) → () Adds action that will be executed on every value change.  "},{"title":"RemoveAction​","type":1,"pageTitle":"RadioGroup","url":"/Multilib-Rewrite/api/RadioGroup#RemoveAction","content":"&lt;/&gt; RadioGroup:RemoveAction(actionName: string) → () Removes action that would be executed on every value change.  "},{"title":"Destroy​","type":1,"pageTitle":"RadioGroup","url":"/Multilib-Rewrite/api/RadioGroup#Destroy","content":"&lt;/&gt; RadioGroup:Destroy() → () Destructor for RadioGroup object. "},{"title":"RadioButton","type":0,"sectionRef":"#","url":"/Multilib-Rewrite/api/RadioButton","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RadioButton","url":"/Multilib-Rewrite/api/RadioButton#functions","content":" "},{"title":"new​","type":1,"pageTitle":"RadioButton","url":"/Multilib-Rewrite/api/RadioButton#new","content":"&lt;/&gt; RadioButton.new( model: any, elements: table, idName: string, radioGroup: table, settings: table ) → &lt;table&gt;-- [RadioButton Object] Constructor for RadioButton object.  "},{"title":"Init​","type":1,"pageTitle":"RadioButton","url":"/Multilib-Rewrite/api/RadioButton#Init","content":"&lt;/&gt; RadioButton:Init() → () should be called only via Form:InitAll().  "},{"title":"LockStatus​","type":1,"pageTitle":"RadioButton","url":"/Multilib-Rewrite/api/RadioButton#LockStatus","content":"&lt;/&gt; RadioButton:LockStatus(status: boolean) → () Changes the RadioButton.locked property.  "},{"title":"Append​","type":1,"pageTitle":"RadioButton","url":"/Multilib-Rewrite/api/RadioButton#Append","content":"&lt;/&gt; RadioButton:Append(where: any) → () Sets the Parent of the RadioButton.model.  "},{"title":"Destroy​","type":1,"pageTitle":"RadioButton","url":"/Multilib-Rewrite/api/RadioButton#Destroy","content":"&lt;/&gt; RadioButton:Destroy() → () Destructor for RadioButton object. "},{"title":"Form","type":0,"sectionRef":"#","url":"/Multilib-Rewrite/api/Form","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Form","url":"/Multilib-Rewrite/api/Form#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Form","url":"/Multilib-Rewrite/api/Form#new","content":"&lt;/&gt; Form.new() → &lt;table&gt;-- [Form Object] Constructor for Form object.  "},{"title":"InsertElement​","type":1,"pageTitle":"Form","url":"/Multilib-Rewrite/api/Form#InsertElement","content":"&lt;/&gt; Form:InsertElement(element: table) → () Inserts element into the Form.elements table.  "},{"title":"InsertElements​","type":1,"pageTitle":"Form","url":"/Multilib-Rewrite/api/Form#InsertElements","content":"&lt;/&gt; Form:InsertElements(elements: table) → () Inserts multiple elements into the Form.elements table.  "},{"title":"ClearElement​","type":1,"pageTitle":"Form","url":"/Multilib-Rewrite/api/Form#ClearElement","content":"&lt;/&gt; Form:ClearElement(ElementName: string) → () Removes element from the Form.elements table.  "},{"title":"ClearAllElements​","type":1,"pageTitle":"Form","url":"/Multilib-Rewrite/api/Form#ClearAllElements","content":"&lt;/&gt; Form:ClearAllElements() → () Clears the Form.elements table.  "},{"title":"InitAll​","type":1,"pageTitle":"Form","url":"/Multilib-Rewrite/api/Form#InitAll","content":"&lt;/&gt; Form:InitAll() → () Initializes all elements inside Form.elements table.  "},{"title":"AppendAll​","type":1,"pageTitle":"Form","url":"/Multilib-Rewrite/api/Form#AppendAll","content":"&lt;/&gt; Form:AppendAll(where: any) → () Sets Parent for all elements inside Form.elements table.  "},{"title":"Validate​","type":1,"pageTitle":"Form","url":"/Multilib-Rewrite/api/Form#Validate","content":"&lt;/&gt; Form:Validate() → &lt;boolean&gt;-- [true if everything is alright, false if there are problems] Validates the data.  "},{"title":"CollectData​","type":1,"pageTitle":"Form","url":"/Multilib-Rewrite/api/Form#CollectData","content":"&lt;/&gt; Form:CollectData() → &lt;table&gt;-- [table of all data] Collects all the data from the form.  "},{"title":"Destroy​","type":1,"pageTitle":"Form","url":"/Multilib-Rewrite/api/Form#Destroy","content":"&lt;/&gt; Form:Destroy() → () Destructor for Form object. "},{"title":"DropDownOption","type":0,"sectionRef":"#","url":"/Multilib-Rewrite/api/DropDownOption","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"DropDownOption","url":"/Multilib-Rewrite/api/DropDownOption#functions","content":" "},{"title":"new​","type":1,"pageTitle":"DropDownOption","url":"/Multilib-Rewrite/api/DropDownOption#new","content":"&lt;/&gt; DropDownOption.new( model: any, elements: table, idName: string, DropDownMenu: table, settings: table ) → &lt;table&gt;-- [DropDownOption Object] Constructor for DropDownOption object.  "},{"title":"Init​","type":1,"pageTitle":"DropDownOption","url":"/Multilib-Rewrite/api/DropDownOption#Init","content":"&lt;/&gt; DropDownOption:Init() → () should be called only via Form:InitAll().  "},{"title":"LockStatus​","type":1,"pageTitle":"DropDownOption","url":"/Multilib-Rewrite/api/DropDownOption#LockStatus","content":"&lt;/&gt; DropDownOption:LockStatus(status: boolean) → () Changes the DropDownOption.locked property.  "},{"title":"Append​","type":1,"pageTitle":"DropDownOption","url":"/Multilib-Rewrite/api/DropDownOption#Append","content":"&lt;/&gt; DropDownOption:Append(where: any) → () Sets the Parent of the DropDownOption.model.  "},{"title":"Destroy​","type":1,"pageTitle":"DropDownOption","url":"/Multilib-Rewrite/api/DropDownOption#Destroy","content":"&lt;/&gt; DropDownOption:Destroy() → () Destructor for DropDownOption object. "},{"title":"CheckBox","type":0,"sectionRef":"#","url":"/Multilib-Rewrite/api/CheckBox","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"CheckBox","url":"/Multilib-Rewrite/api/CheckBox#functions","content":" "},{"title":"new​","type":1,"pageTitle":"CheckBox","url":"/Multilib-Rewrite/api/CheckBox#new","content":"&lt;/&gt; CheckBox.new( model: any, elements: table, idName: string, settings: table ) → &lt;table&gt;-- [Checkbox Object] Constructor for CheckBox object.  "},{"title":"Init​","type":1,"pageTitle":"CheckBox","url":"/Multilib-Rewrite/api/CheckBox#Init","content":"&lt;/&gt; CheckBox:Init() → () should be called only via Form:InitAll().  "},{"title":"ReturnValues​","type":1,"pageTitle":"CheckBox","url":"/Multilib-Rewrite/api/CheckBox#ReturnValues","content":"&lt;/&gt; CheckBox:ReturnValues() → &lt;boolean,string&gt;-- [value and idName of the object] Returns value and idName of the object.  "},{"title":"LockStatus​","type":1,"pageTitle":"CheckBox","url":"/Multilib-Rewrite/api/CheckBox#LockStatus","content":"&lt;/&gt; CheckBox:LockStatus(status: boolean) → () Changes the CheckBox.locked property.  "},{"title":"Append​","type":1,"pageTitle":"CheckBox","url":"/Multilib-Rewrite/api/CheckBox#Append","content":"&lt;/&gt; CheckBox:Append(where: any) → () Sets the Parent of the CheckBox.model.  "},{"title":"AddAction​","type":1,"pageTitle":"CheckBox","url":"/Multilib-Rewrite/api/CheckBox#AddAction","content":"&lt;/&gt; CheckBox:AddAction( actionName: string, action: any ) → () Adds action that will be executed on every value change.  "},{"title":"RemoveAction​","type":1,"pageTitle":"CheckBox","url":"/Multilib-Rewrite/api/CheckBox#RemoveAction","content":"&lt;/&gt; CheckBox:RemoveAction(actionName: string) → () Removes action that would be executed on every value change.  "},{"title":"Destroy​","type":1,"pageTitle":"CheckBox","url":"/Multilib-Rewrite/api/CheckBox#Destroy","content":"&lt;/&gt; CheckBox:Destroy() → () Destructor for CheckBox object. "},{"title":"InputField","type":0,"sectionRef":"#","url":"/Multilib-Rewrite/api/InputField","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"InputField","url":"/Multilib-Rewrite/api/InputField#functions","content":" "},{"title":"new​","type":1,"pageTitle":"InputField","url":"/Multilib-Rewrite/api/InputField#new","content":"&lt;/&gt; InputField.new( model: any, elements: table, idName: string, settings: table ) → &lt;table&gt;-- [InputField Object] Constructor for InputField object.  "},{"title":"Init​","type":1,"pageTitle":"InputField","url":"/Multilib-Rewrite/api/InputField#Init","content":"&lt;/&gt; InputField:Init() → () should be called only via Form:InitAll().  "},{"title":"ReturnValues​","type":1,"pageTitle":"InputField","url":"/Multilib-Rewrite/api/InputField#ReturnValues","content":"&lt;/&gt; InputField:ReturnValues() → &lt;boolean,string&gt;-- [value and idName of the object] Returns value and idName of the object.  "},{"title":"LockStatus​","type":1,"pageTitle":"InputField","url":"/Multilib-Rewrite/api/InputField#LockStatus","content":"&lt;/&gt; InputField:LockStatus(status: boolean) → () Changes the InputField.locked property.  "},{"title":"Append​","type":1,"pageTitle":"InputField","url":"/Multilib-Rewrite/api/InputField#Append","content":"&lt;/&gt; InputField:Append(where: any) → () Sets the Parent of the InputField.model.  "},{"title":"AddAction​","type":1,"pageTitle":"InputField","url":"/Multilib-Rewrite/api/InputField#AddAction","content":"&lt;/&gt; InputField:AddAction( actionName: string, action: any ) → () Adds action that will be executed on every value change.  "},{"title":"RemoveAction​","type":1,"pageTitle":"InputField","url":"/Multilib-Rewrite/api/InputField#RemoveAction","content":"&lt;/&gt; InputField:RemoveAction(actionName: string) → () Removes action that would be executed on every value change.  "},{"title":"Destroy​","type":1,"pageTitle":"InputField","url":"/Multilib-Rewrite/api/InputField#Destroy","content":"&lt;/&gt; InputField:Destroy() → () Destructor for InputField object. "},{"title":"Slider","type":0,"sectionRef":"#","url":"/Multilib-Rewrite/api/Slider","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Slider","url":"/Multilib-Rewrite/api/Slider#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Slider","url":"/Multilib-Rewrite/api/Slider#new","content":"&lt;/&gt; Slider.new( model: any, elements: table, idName: string, settings: table ) → &lt;table&gt;-- [Slider Object] Constructor for Slider object.  "},{"title":"Init​","type":1,"pageTitle":"Slider","url":"/Multilib-Rewrite/api/Slider#Init","content":"&lt;/&gt; Slider:Init() → () should be called only via Form:InitAll().  "},{"title":"AddAction​","type":1,"pageTitle":"Slider","url":"/Multilib-Rewrite/api/Slider#AddAction","content":"&lt;/&gt; Slider:AddAction( actionName: string, action: any ) → () Adds action that will be executed on every value change.  "},{"title":"RemoveAction​","type":1,"pageTitle":"Slider","url":"/Multilib-Rewrite/api/Slider#RemoveAction","content":"&lt;/&gt; Slider:RemoveAction(actionName: string) → () Removes action that would be executed on every value change.  "},{"title":"ReturnValues​","type":1,"pageTitle":"Slider","url":"/Multilib-Rewrite/api/Slider#ReturnValues","content":"&lt;/&gt; Slider:ReturnValues() → &lt;boolean,string&gt;-- [value and idName of the object] Returns value and idName of the object.  "},{"title":"LockStatus​","type":1,"pageTitle":"Slider","url":"/Multilib-Rewrite/api/Slider#LockStatus","content":"&lt;/&gt; Slider:LockStatus(status: boolean) → () Changes the Slider.locked property.  "},{"title":"Append​","type":1,"pageTitle":"Slider","url":"/Multilib-Rewrite/api/Slider#Append","content":"&lt;/&gt; Slider:Append(where: any) → () Sets the Parent of the Slider.model.  "},{"title":"Destroy​","type":1,"pageTitle":"Slider","url":"/Multilib-Rewrite/api/Slider#Destroy","content":"&lt;/&gt; Slider:Destroy() → () Destructor for Slider object. "},{"title":"player","type":0,"sectionRef":"#","url":"/Multilib-Rewrite/api/player","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"player","url":"/Multilib-Rewrite/api/player#functions","content":" "},{"title":"IsFirstPerson​","type":1,"pageTitle":"player","url":"/Multilib-Rewrite/api/player#IsFirstPerson","content":"&lt;/&gt; player:IsFirstPerson(threshold: number) → &lt;boolean&gt;-- [true/false] Checks if the player is in first person.  "},{"title":"ForceFirstPerson​","type":1,"pageTitle":"player","url":"/Multilib-Rewrite/api/player#ForceFirstPerson","content":"&lt;/&gt; player:ForceFirstPerson(State: boolean) → () Sets player CameraMode. "},{"title":"ArrowChange","type":0,"sectionRef":"#","url":"/Multilib-Rewrite/api/ArrowChange","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ArrowChange","url":"/Multilib-Rewrite/api/ArrowChange#functions","content":" "},{"title":"new​","type":1,"pageTitle":"ArrowChange","url":"/Multilib-Rewrite/api/ArrowChange#new","content":"&lt;/&gt; ArrowChange.new( model: any, elements: table, idName: string, settings: table? ) → &lt;table&gt;-- [ArrowChange Object] Constructor for ArrowChange object.  "},{"title":"Init​","type":1,"pageTitle":"ArrowChange","url":"/Multilib-Rewrite/api/ArrowChange#Init","content":"&lt;/&gt; ArrowChange:Init() → () should be called only via Form:InitAll().  "},{"title":"UpdateValues​","type":1,"pageTitle":"ArrowChange","url":"/Multilib-Rewrite/api/ArrowChange#UpdateValues","content":"&lt;/&gt; ArrowChange:UpdateValues( values: any, index: number? ) → () Updates the values and index (optional).  "},{"title":"ReturnValues​","type":1,"pageTitle":"ArrowChange","url":"/Multilib-Rewrite/api/ArrowChange#ReturnValues","content":"&lt;/&gt; ArrowChange:ReturnValues() → &lt;boolean,string&gt;-- [value and idName of the object] Returns value and idName of the object.  "},{"title":"LockStatus​","type":1,"pageTitle":"ArrowChange","url":"/Multilib-Rewrite/api/ArrowChange#LockStatus","content":"&lt;/&gt; ArrowChange:LockStatus(status: boolean) → () Changes the ArrowChange.locked property.  "},{"title":"Append​","type":1,"pageTitle":"ArrowChange","url":"/Multilib-Rewrite/api/ArrowChange#Append","content":"&lt;/&gt; ArrowChange:Append(where: any) → () Sets the Parent of the ArrowChange.model.  "},{"title":"AddAction​","type":1,"pageTitle":"ArrowChange","url":"/Multilib-Rewrite/api/ArrowChange#AddAction","content":"&lt;/&gt; ArrowChange:AddAction( actionName: string, action: any ) → () Adds action that will be executed on every value change.  "},{"title":"RemoveAction​","type":1,"pageTitle":"ArrowChange","url":"/Multilib-Rewrite/api/ArrowChange#RemoveAction","content":"&lt;/&gt; ArrowChange:RemoveAction(actionName: string) → () Removes action that would be executed on every value change.  "},{"title":"Destroy​","type":1,"pageTitle":"ArrowChange","url":"/Multilib-Rewrite/api/ArrowChange#Destroy","content":"&lt;/&gt; ArrowChange:Destroy() → () Destructor for ArrowChange object. "},{"title":"DropDownMenu","type":0,"sectionRef":"#","url":"/Multilib-Rewrite/api/DropDownMenu","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"DropDownMenu","url":"/Multilib-Rewrite/api/DropDownMenu#functions","content":" "},{"title":"new​","type":1,"pageTitle":"DropDownMenu","url":"/Multilib-Rewrite/api/DropDownMenu#new","content":"&lt;/&gt; DropDownMenu.new( model: any, elements: table, idName: string, DropDownOptions: table, settings: table ) → &lt;table&gt;-- [DropDownMenu Object] Constructor for DropDownMenu object.  "},{"title":"Init​","type":1,"pageTitle":"DropDownMenu","url":"/Multilib-Rewrite/api/DropDownMenu#Init","content":"&lt;/&gt; DropDownMenu:Init() → () should be called only via Form:InitAll().  "},{"title":"LockStatus​","type":1,"pageTitle":"DropDownMenu","url":"/Multilib-Rewrite/api/DropDownMenu#LockStatus","content":"&lt;/&gt; DropDownMenu:LockStatus(status: boolean) → () Changes the DropDownMenu.locked property.  "},{"title":"Append​","type":1,"pageTitle":"DropDownMenu","url":"/Multilib-Rewrite/api/DropDownMenu#Append","content":"&lt;/&gt; DropDownMenu:Append(where: any) → () Sets the Parent of the DropDownMenu.model.  "},{"title":"AddAction​","type":1,"pageTitle":"DropDownMenu","url":"/Multilib-Rewrite/api/DropDownMenu#AddAction","content":"&lt;/&gt; DropDownMenu:AddAction( actionName: string, action: any ) → () Adds action that will be executed on every value change.  "},{"title":"RemoveAction​","type":1,"pageTitle":"DropDownMenu","url":"/Multilib-Rewrite/api/DropDownMenu#RemoveAction","content":"&lt;/&gt; DropDownMenu:RemoveAction(actionName: string) → () Removes action that would be executed on every value change.  "},{"title":"InsertElement​","type":1,"pageTitle":"DropDownMenu","url":"/Multilib-Rewrite/api/DropDownMenu#InsertElement","content":"&lt;/&gt; DropDownMenu:InsertElement(element: table) → () Inserts element into the DropDownMenu.RadioButtons table.  "},{"title":"InsertElements​","type":1,"pageTitle":"DropDownMenu","url":"/Multilib-Rewrite/api/DropDownMenu#InsertElements","content":"&lt;/&gt; DropDownMenu:InsertElements(elements: table) → () Inserts multiple elements into the DropDownMenu.RadioButtons table.  "},{"title":"ClearElement​","type":1,"pageTitle":"DropDownMenu","url":"/Multilib-Rewrite/api/DropDownMenu#ClearElement","content":"&lt;/&gt; DropDownMenu:ClearElement(ElementName: string) → () Removes element from the DropDownMenu.RadioButtons table.  "},{"title":"ClearAllElements​","type":1,"pageTitle":"DropDownMenu","url":"/Multilib-Rewrite/api/DropDownMenu#ClearAllElements","content":"&lt;/&gt; DropDownMenu:ClearAllElements() → () Clears the DropDownMenu.RadioButtons table.  "},{"title":"ReturnValues​","type":1,"pageTitle":"DropDownMenu","url":"/Multilib-Rewrite/api/DropDownMenu#ReturnValues","content":"&lt;/&gt; DropDownMenu:ReturnValues() → &lt;boolean,string&gt;-- [value and idName of the object] Returns value and idName of the object.  "},{"title":"Destroy​","type":1,"pageTitle":"DropDownMenu","url":"/Multilib-Rewrite/api/DropDownMenu#Destroy","content":"&lt;/&gt; DropDownMenu:Destroy() → () Destructor for DropDownMenu object. "}]